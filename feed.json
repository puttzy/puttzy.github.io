{
    "version": "https://jsonfeed.org/version/1",
    "title": "Puttz&#x27;n Around in Code",
    "description": "",
    "home_page_url": "https://puttzy.github.io",
    "feed_url": "https://puttzy.github.io/feed.json",
    "user_comment": "",
    "icon": "https://puttzy.github.io/media/website/Bokehlicia-Captiva-Cloud.ico",
    "author": {
        "name": "Dan Putt"
    },
    "items": [
        {
            "id": "https://puttzy.github.io/deploying-springboot-container-to-cloud-run-via-cloud-build.html",
            "url": "https://puttzy.github.io/deploying-springboot-container-to-cloud-run-via-cloud-build.html",
            "title": "Cloud Build + Cloud Run Errors",
            "summary": "<p>When deploying my newly <em>jibized application to <a href=\"https://cloud.google.com/run/\">Google Cloud Run</a> via</em> <a href=\"https://cloud.google.com/cloud-build/\">Google Cloud Build</a> I was plagued with a seemingly simple error that took me much longer to figure out than it should have.</p>\n",
            "content_html": "<p>When deploying my newly <em>jibized application to <a href=\"https://cloud.google.com/run/\">Google Cloud Run</a> via</em> <a href=\"https://cloud.google.com/cloud-build/\">Google Cloud Build</a> I was plagued with a seemingly simple error that took me much longer to figure out than it should have.</p>\n\n<pre class=\"p6n-gcb-log p6n-gcb-log-wrap-lines\">ERROR: (gcloud.beta.run.deploy) PERMISSION_DENIED: The caller does not have permission</pre>\n<p>I wasn't getting the error when using the <a href=\"https://cloud.google.com/cloud-build/docs/build-debug-locally\">cloud-build-local</a> CLI command.  So, being the simple genius I am, surmized it must be a permission issue on the agent running the task. </p>\n<p>The first thing I did was go into <a href=\"https://cloud.google.com/iam/\">IAM</a>, find the <em>${ProjectId}@cloudbuild.gserviceaccount.com </em>service account and give it the Cloud Run Admin role.  Easy enough, rerun and it will work.....</p>\n<p>Or, in my case, get a new error:</p>\n<pre class=\"p6n-gcb-log p6n-gcb-log-wrap-lines\">Starting Step #2\nStep #2: Already have image (with digest): gcr.io/cloud-builders/gcloud\nStep #2: Deploying container to Cloud Run service [catalog-service-jib] in project [my-project-name] region [us-east1]\nStep #2: Deploying...\nStep #2: failed\nStep #2: Deployment failed\nStep #2: ERROR: gcloud crashed (KeyError): u'details'\nStep #2: \nStep #2: If you would like to report this issue, please run the following command:\nStep #2: gcloud feedback\nStep #2: \nStep #2: To check gcloud for common problems, please run the following command:\nStep #2: gcloud info --run-diagnostics\nFinished Step #2\nERROR\nERROR: build step 2 \"gcr.io/cloud-builders/gcloud\" failed: exit status 1</pre>\n<p>From this I can assume that I got the right user as I got a new error....But it doesn't solve my actual problem of not being able to deploy my app via Cloud Build.</p>\n<p>Playing around, taking some wild guesses, screwing up some permissions I decided to finally succomb and ask the Google Machine what was going on.  Within a few click I had track down the missing role: <a href=\"https://cloud.google.com/iam/docs/service-accounts#the_service_account_user_role\">Service Account User</a> - Which even after reading still hurt my head but it was a little late, and I was tired.</p>\n<p>Adding that magic role allowed my container to deploy and start (and fail do a credentails file I have to inject into mty container but dont want to check in to my repo.....but that's a problem for another time)</p>\n<p>Takeaways I want to follow up on:</p>\n<ol>\n<li>Service Account User role</li>\n<li>How to run a command as a specific user account\n<ol>\n<li>This would be helpful so I could do it from google cloud shell and actually follow up with the diagnostics commands it suggests</li>\n</ol>\n</li>\n</ol>",
            "author": {
                "name": "Dan Putt"
            },
            "tags": [
            ],
            "date_published": "2019-09-06T21:56:18-04:00",
            "date_modified": "2019-09-06T21:56:18-04:00"
        },
        {
            "id": "https://puttzy.github.io/spring-boot-healthchecks-in-google-cloud-run.html",
            "url": "https://puttzy.github.io/spring-boot-healthchecks-in-google-cloud-run.html",
            "title": "Spring Boot Healthchecks in Google Cloud Run",
            "summary": "When trying to get my Spring Boot application to run on Google Cloud Run the health checks were returning { \"status\": \"DOWN\" }Which is odd when you consider the fact that I could get to the health check itself. How can it be running yet return&hellip;",
            "content_html": "<p>When trying to get my Spring Boot application to run on Google Cloud Run the health checks were returning </p>\n<pre>{<br>  \"status\": \"DOWN\"<br>}</pre>\n<p>Which is odd when you consider the fact that I could get to the health check itself.  How can it be running yet return a status of down?</p>\n<p>In my Cloud Run logs I saw the error:</p>\n<pre>o.s.b.a.system.DiskSpaceHealthIndicator : Free disk space below threshold. Available: 0 bytes (threshold: 10485760B)</pre>\n<p>After doing some digging, since I've never really looker too deeply into the <a href=\"It turns out, for the unitiated like me, Spring checks a bunch of items when performing a healthcheck.\">Spring Health Indicators</a>, I realized that spring checks a bunch of different items as part of their status.  Disk Space being one of them.  </p>\n<p>Since I'm running this as <em>a <a href=\"https://cloud.google.com/blog/products/gcp/introducing-jib-build-java-docker-images-better\">jibbified</a> Spring</em> Boot application I didn't reserve any diskspace and the application is running in a OCI without an underlying OS - which totally makes sense why it was failing.</p>\n<p>The first thing I did was enable showing the details of the health check (/actuator/health).  In my application.yaml I added:</p>\n<pre>spring.endpoint.health.show-details=always</pre>\n<p>which returned me a bunch more information - notice the <strong>bold</strong> line below</p>\n<pre>{<br>  <strong>\"status\": \"DOWN\",</strong><br><strong>  \"details\": {</strong><br><strong>    \"diskSpace\": {</strong><br><strong>      \"status\": \"DOWN\",</strong><br><strong>      \"details\": {</strong><br><strong>        \"total\": 0,</strong><br><strong>        \"free\": 0,</strong><br><strong>        \"threshold\": 10485760</strong><br><strong>      }</strong><br><strong>    },</strong><br>    \"db\": {<br>      \"status\": \"UP\",<br>      \"details\": {<br>        \"database\": \"MySQL\",<br>        \"hello\": 1<br>      }<br>    },<br>    \"refreshScope\": {<br>      \"status\": \"UP\"<br>    },<br>    \"discoveryComposite\": {<br>      \"status\": \"UP\",<br>      \"details\": {<br>        \"discoveryClient\": {<br>          \"status\": \"UP\",<br>          \"details\": {<br>            \"services\": [\"api-gateway\", \"catalog-service\", \"cart-service\"]<br>          }<br>        },<br>        \"eureka\": {<br>          \"description\": \"Eureka discovery client has not yet successfully connected to a Eureka server\",<br>          \"status\": \"UP\",<br>          \"details\": {<br>            \"applications\": {<br>              \"API-GATEWAY\": 1,<br>              \"CATALOG-SERVICE\": 1,<br>              \"CART-SERVICE\": 1<br>            }<br>          }<br>        }<br>      }<br>    },<br>    \"hystrix\": {<br>      \"status\": \"UP\"<br>    }<br>  }<br>}</pre>\n<p>When one of the health indicators is \"down\" the status of the service returns \"down\" - which in turn removes it completely from Eureka.</p>\n<p>By addinng another simple config to my application.yaml I was able to fix this problem </p>\n<pre>health.diskspace.enabled=false</pre>\n<p>Which removed the disck check from my status, and listed the entire service a healthy  and allowed it to register with Eureka   </p>\n<pre><br>  \"status\": \"UP\",<br>  \"details\": {<br>    \"db\": {<br>      \"status\": \"UP\",<br>      \"details\": {<br>        \"database\": \"MySQL\",<br>        \"hello\": 1<br>      }<br>    },<br>    \"refreshScope\": {<br>      \"status\": \"UP\"<br>    },<br>    \"discoveryComposite\": {<br>      \"status\": \"UP\",<br>      \"details\": {<br>        \"discoveryClient\": {<br>          \"status\": \"UP\",<br>          \"details\": {<br>            \"services\": [\"api-gateway\", \"cart-service\", \"catalog-service\"]<br>          }<br>        },<br>        \"eureka\": {<br>          \"description\": \"Remote status from Eureka server\",<br>          \"status\": \"UP\",<br>          \"details\": {<br>            \"applications\": {<br>              \"API-GATEWAY\": 1,<br>              \"CATALOG-SERVICE\": 1,<br>              \"CART-SERVICE\": 1<br>            }<br>          }<br>        }<br>      }<br>    },<br>    \"hystrix\": {<br>      \"status\": \"UP\"<br>    }<br>  }<br>}</pre>",
            "image": "https://puttzy.github.io/media/posts/2/cloud-run.png",
            "author": {
                "name": "Dan Putt"
            },
            "tags": [
            ],
            "date_published": "2019-09-05T22:31:35-04:00",
            "date_modified": "2019-09-06T11:40:21-04:00"
        }
    ]
}
